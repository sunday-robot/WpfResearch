<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="LightBlue" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="SlimComboBoxButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" BorderThickness="1" BorderBrush="Red">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Path x:Name="Arrow"
                  Grid.Column="1" Margin="4 0 4 0"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Data="M 0 0.5 L 3 3.5 L 6 0.5 Z" Fill="Purple" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#DD99CCFF"/>
                <Setter TargetName="Border" Property="Background" Value="#2299CCFF"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="#EE99CCFF"/>
                <Setter TargetName="Border" Property="Background" Value="#4499CCFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
    <Style x:Key="SlimComboBoxItemStyle"  TargetType="{x:Type ComboBoxItem}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                        Padding="2" Margin="0 1 0 0"
                        BorderThickness="1" BorderBrush="Transparent"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#DD99CCFF"/>
                            <Setter TargetName="Border" Property="Background" Value="#2299CCFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#4499CCFF"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#DD99CCFF"/>
                            <Setter TargetName="Border" Property="Background" Value="#2299CCFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <Style  x:Key="SlimComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                  Template="{StaticResource SlimComboBoxButtonTemplate}"
                                  ClickMode="Press" Focusable="false"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="3 3 23 3"
                                      HorizontalAlignment="Left" VerticalAlignment="Stretch" />
                        <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             HorizontalAlignment="Left" VerticalAlignment="Bottom"
                             HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                             Margin="3 3 23 3"
                             Focusable="True" Background="Transparent" Visibility="Hidden"
                             IsReadOnly="{TemplateBinding IsReadOnly}" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup Name="Popup"
                           AllowsTransparency="True" Focusable="False" PopupAnimation="None"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1" BorderBrush="#CCCCCC"/>
                                <ScrollViewer Margin="4 6 4 6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <Grid>
            <Rectangle Fill="Yellow"/>
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HoverComboBoxTemplate" TargetType="ComboBox">
        <Grid>
            <Rectangle Fill="Red"/>
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DisabledComboBoxTemplate" TargetType="ComboBox">
        <Grid>
            <Rectangle Fill="Green"/>
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource HoverComboBoxTemplate}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource DisabledComboBoxTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    -->
</ResourceDictionary>